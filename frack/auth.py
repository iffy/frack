# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.
from twisted.internet import defer

import hashlib
import os



class Unauthorized(Exception):
    pass


class InMemoryAuthStore(object):
    """
    I store authentication tokens in memory.
    """


    def __init__(self):
        self._data = {}


    def getToken(self, username):
        """
        Get a token (typically for cookie authentication) for this user.
        """
        # get existing token
        for k,v in self._data.items():
            if v == username:
                return k

        # generate a new token
        key = hashlib.sha1(os.urandom(16)).hexdigest()
        self._data[key] = username
        return defer.succeed(key)


    def getUserByToken(self, key):
        """
        Find the username associated with a token (previously generated by
        L{getToken})
        """
        return defer.succeed(self._data[key])