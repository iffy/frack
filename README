# -*- mode: org -*-

* Frack, A Completely Ridiculous Issue Tracker
I wrote this because twistedmatrix.com has a Trac instance full of
valuable data, and Trac has become increasingly annoying over the past
7 years. Frack is an attempt to provide a better face on that data.

** How It Works
Frack provides AMP and JSON-RPC listeners in a Twisted-based server,
and a browser-based client.

*** Server
AMP commands in frack.responder define the interface for working with
ticket data. A JSON-RPC wrapper uses these same command objects to
define an HTTP-friendly interface.

*** Client
The web client lives in `webclient` and uses Dojo and Mustache. HTML
templating is done client side and communication with the server is
via JSON-RPC. Persona (http://persona.org) is used for authentication.


** How To Run It
If you want to develop Frack, the tests can be run via 'trial
frack.test'. For running a development server:

# Install the packages listed in `requirements.txt`

    pip install -r requirements.txt


# load some test data into an sqlite db

    sqlite3 < frack/test/trac_test.sql trac.db


# start the server (the URL here must be the url at which you will
# access the site)

    twistd -n frack --sqlite_db=trac.db


# For testing, authentication is done by putting the name of the user you 
# want to be in the url path.  Don't worry, this will be removed later.


# To create a new ticket go to:

    http://localhost:1353/tickets/newticket


# To view existing tickets go to:

    http://localhost:1353/tickets/ticket/<ticket_number>


# Ticket numbers in the test database are: 3312, 5622, 5517, 2723, 4712.
